name: Python CI

on:
  push:
    branches: [ main ] # Or your default branch, e.g., master
  pull_request:
    branches: [ main ] # Or your default branch

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Hatch
      run: |
        pip install hatch

    - name: Check formatting with Ruff
      run: hatch run lint:fmt --check

    - name: Lint with Ruff
      run: hatch run lint:style

    - name: Type check with MyPy
      run: hatch run lint:typing

    - name: Test with Pytest (includes coverage)
      # Using the 'cov' script from the 'lint' env as it includes pytest-cov
      # Or, we could define a separate 'test:cov' in 'default' env
      run: hatch run lint:cov

    - name: Build package
      run: hatch build
      if: success() # Only build if all previous steps passed
      # Consider uploading artifacts if needed:
      # - uses: actions/upload-artifact@v3
      #   with:
      #     path: dist/
      #     name: python-package-${{ matrix.python-version }}

# Need to define the linting scripts in pyproject.toml for hatch
# For now, ruff and mypy are in default env's dependencies.
# Let's refine pyproject.toml for specific lint/typing scripts.
