# Save this file as .github/workflows/release.yml
# this_file: workflows-release.yml

name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.10", "3.11", "3.12"]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"

    - name: Run linting
      run: |
        python -m ruff check src/ tests/
        python -m ruff format --check src/ tests/

    - name: Run type checking
      run: |
        python -m mypy --package html22text --package tests

    - name: Run tests with coverage
      run: |
        python -m pytest --cov=src/html22text --cov-report=xml --cov-report=term-missing tests/

  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history for proper version detection

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Build package
      run: |
        python -m build

    - name: Check distribution
      run: |
        python -m twine check dist/*

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist/

  publish:
    runs-on: ubuntu-latest
    needs: build
    environment: release
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing
    
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: dist
        path: dist/

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        packages-dir: dist/

  create-release:
    runs-on: ubuntu-latest
    needs: publish
    permissions:
      contents: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: dist
        path: dist/

    - name: Extract version from tag
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

    - name: Create GitHub Release
      uses: ncipollo/create-release@v1
      with:
        tag: ${{ github.ref_name }}
        name: Release ${{ github.ref_name }}
        body: |
          ## Changes in ${{ github.ref_name }}
          
          This release includes various improvements and bug fixes.
          
          ### Installation
          
          ```bash
          pip install html22text==${{ env.VERSION }}
          ```
          
          ### Files
          
          - `html22text-${{ env.VERSION }}.tar.gz` - Source distribution
          - `html22text-${{ env.VERSION }}-py3-none-any.whl` - Python wheel
          
          See the [CHANGELOG.md](https://github.com/twardoch/html22text/blob/main/CHANGELOG.md) for detailed changes.
        draft: false
        prerelease: false
        artifacts: "dist/*"
        token: ${{ secrets.GITHUB_TOKEN }}

  build-executables:
    runs-on: ${{ matrix.os }}
    needs: test
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.11"]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
        pip install pyinstaller

    - name: Build executable
      run: |
        pyinstaller --onefile --name html22text-${{ matrix.os }} src/html22text/__main__.py

    - name: Upload executable artifacts
      uses: actions/upload-artifact@v3
      with:
        name: executables
        path: dist/html22text-*

  upload-executables:
    runs-on: ubuntu-latest
    needs: [create-release, build-executables]
    permissions:
      contents: write
    
    steps:
    - name: Download executable artifacts
      uses: actions/download-artifact@v3
      with:
        name: executables
        path: executables/

    - name: Upload executables to release
      uses: ncipollo/create-release@v1
      with:
        tag: ${{ github.ref_name }}
        allowUpdates: true
        artifacts: "executables/*"
        token: ${{ secrets.GITHUB_TOKEN }}